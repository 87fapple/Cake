//  蛋糕種類篩選ajax 1.0
    menu.php
        function kindCake() {
            fetch('php/menu/kindcake.php')
                .then(response => response.json())
                .then(sortedCakes => {
                    renderCakes(sortedCakes);
                })
                .catch(error => console.error('請求失敗：', error));
        }
        function kindCookie() {
            fetch('php/menu/kindcookie.php')
                .then(response => response.json())
                .then(sortedCakes => {
                    renderCakes(sortedCakes);
                })
                .catch(error => console.error('請求失敗：', error));
        }

    kindcake.php
        <?php
        require_once('../db2.php');

        $sql = 'SELECT * FROM cake WHERE kind="蛋糕"';
        $result = $mysqli->query($sql);

        $cakes = array();

        while ($row = $result->fetch_assoc()) {
            $cakes[] = $row;
        }

        // 设置响应头部，指定返回的是 JSON 格式的数据
        header('Content-Type: application/json');

        // 将排序后的数据转换为 JSON 格式并返回给 AJAX 请求
        echo json_encode($cakes);
        ?>
    kindcookie.php
        <?php
        require_once('../db2.php');

        $sql = 'SELECT * FROM cake WHERE kind="餅乾"';
        $result = $mysqli->query($sql);

        $cakes = array();

        while ($row = $result->fetch_assoc()) {
            $cakes[] = $row;
        }

        // 设置响应头部，指定返回的是 JSON 格式的数据
        header('Content-Type: application/json');

        // 将排序后的数据转换为 JSON 格式并返回给 AJAX 请求
        echo json_encode($cakes);
        ?>


// 價格排序1.0
    menu.php
        function priceSortAsc() {
            fetch('php/menu/priceasc.php')
                .then(response => response.json())
                .then(sortedCakes => {
                    renderCakes(sortedCakes);
                })
                .catch(error => console.error('請求失敗：', error));
        }
        function priceSortDesc() {
            fetch('php/menu/pricedesc.php')
                .then(response => response.json())
                .then(sortedCakes => {
                    renderCakes(sortedCakes);
                })
                .catch(error => console.error('請求失敗：', error));
        }

    priceasc
        <?php
        require_once('../db2.php');

        $sql = 'SELECT * FROM cake ORDER BY price ASC';
        $result = $mysqli->query($sql);

        $cakes = array();

        while ($row = $result->fetch_assoc()) {
            $cakes[] = $row;
        }

        // 设置响应头部，指定返回的是 JSON 格式的数据
        header('Content-Type: application/json');

        // 将排序后的数据转换为 JSON 格式并返回给 AJAX 请求
        echo json_encode($cakes);
        ?>
    pricedesc
        <?php
        require_once('../db2.php');

        $sql = 'SELECT * FROM cake ORDER BY price DESC';
        $result = $mysqli->query($sql);

        $cakes = array();

        while ($row = $result->fetch_assoc()) {
            $cakes[] = $row;
        }

        // 设置响应头部，指定返回的是 JSON 格式的数据
        header('Content-Type: application/json');

        // 将排序后的数据转换为 JSON 格式并返回给 AJAX 请求
        echo json_encode($cakes);
        ?>


    pricesort.php

        <?php
        require_once('../db2.php');

        // 获取从前端传递过来的排序方式参数
        $sortType = $_REQUEST['sortType'];

        // 根据排序方式参数生成不同的排序SQL语句
        if ($sortType === 'asc') {
            $sql = 'SELECT * FROM cake ORDER BY price ASC';
        } else if ($sortType === 'desc') {
            $sql = 'SELECT * FROM cake ORDER BY price DESC';
        } else {
            // 默认按价格升序排序
            $sql = 'SELECT * FROM cake ORDER BY price ASC';
        }

        $result = $mysqli->query($sql);

        $cakes = array();

        while ($row = $result->fetch_assoc()) {
            $cakes[] = $row;
        }

        // 设置响应头部，指定返回的是 JSON 格式的数据
        header('Content-Type: application/json');

        // 将查询结果转换为 JSON 格式并返回给 AJAX 请求
        echo json_encode($cakes);
        ?>

// 蛋糕種類篩選 2.0
    function kindFilter(kind) {
        fetch(`php/menu/kindfilter.php?kind=${kind}`)
            .then(response => response.json())
            .then(sortedCakes => {
                renderCakes(sortedCakes);
            })
            .catch(error => console.error('請求失敗：', error));
    }

    function kindCake() {
        kindFilter('蛋糕');
    }

    function kindCookie() {
        kindFilter('餅乾');
    }

    // 價格排序2.0
    function priceSort(sortType) {
        fetch(`php/menu/pricesort.php?sortType=${sortType}`)
            .then(response => response.json())
            .then(sortedCakes => {
                renderCakes(sortedCakes);
            })
            .catch(error => console.error('請求失敗：', error));
        }